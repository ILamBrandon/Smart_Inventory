{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/Documents/Resume_Project/Smart_Inventory_Management/frontend/src/components/AWSDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AWSDashboard() {\n  _s();\n  // S3 Upload state\n  const [file, setFile] = useState(null);\n  const [s3Status, setS3Status] = useState('');\n\n  // SQS state\n  const [sqsMessage, setSqsMessage] = useState('');\n  const [sqsStatus, setSqsStatus] = useState('');\n\n  // Lambda state\n  const [lambdaResponse, setLambdaResponse] = useState('');\n\n  // CloudWatch state\n  const [cloudWatchMetrics, setCloudWatchMetrics] = useState(null);\n\n  // --- S3 Upload Handler ---\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const res = await axios.post('http://localhost:5001/api/aws/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setS3Status(`Upload successful: ${res.data.fileUrl}`);\n    } catch (err) {\n      console.error(err);\n      setS3Status('Upload failed.');\n    }\n  };\n\n  // --- SQS Handler ---\n  const handleSqsSend = async () => {\n    if (!sqsMessage) return;\n    try {\n      const res = await axios.post('http://localhost:5001/api/aws/sqs', {\n        message: sqsMessage\n      });\n      setSqsStatus(`SQS message sent successfully (ID: ${res.data.MessageId})`);\n    } catch (error) {\n      console.error(error);\n      setSqsStatus('Error sending SQS message.');\n    }\n  };\n\n  // --- Lambda Handler ---\n  const handleLambdaTrigger = async () => {\n    try {\n      const res = await axios.post('http://localhost:5001/api/aws/lambda/trigger', {});\n      setLambdaResponse(`Lambda response: ${res.data.result}`);\n    } catch (error) {\n      console.error(error);\n      setLambdaResponse('Error triggering Lambda.');\n    }\n  };\n\n  // --- CloudWatch Handler ---\n  const fetchCloudWatchMetrics = async () => {\n    try {\n      const res = await axios.get('http://localhost:5001/api/aws/cloudwatch/metrics');\n      setCloudWatchMetrics(res.data.data);\n    } catch (error) {\n      console.error(error);\n      setCloudWatchMetrics('Error fetching CloudWatch metrics.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AWS Integration Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '1rem',\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"S3 File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), s3Status && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: s3Status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '1rem',\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"SQS Test Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter SQS message\",\n        value: sqsMessage,\n        onChange: e => setSqsMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSqsSend,\n        children: \"Send SQS Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), sqsStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: sqsStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '1rem',\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Lambda Trigger Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLambdaTrigger,\n        children: \"Trigger Lambda Function\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), lambdaResponse && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: lambdaResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '1rem',\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"CloudWatch Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchCloudWatchMetrics,\n        children: \"Fetch Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), cloudWatchMetrics && /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          textAlign: 'left',\n          background: '#f4f4f4',\n          padding: '1rem'\n        },\n        children: typeof cloudWatchMetrics === 'string' ? cloudWatchMetrics : JSON.stringify(cloudWatchMetrics, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(AWSDashboard, \"hlvPXVKaTpA8blRF0GhYYxwulPg=\");\n_c = AWSDashboard;\nexport default AWSDashboard;\nvar _c;\n$RefreshReg$(_c, \"AWSDashboard\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AWSDashboard","_s","file","setFile","s3Status","setS3Status","sqsMessage","setSqsMessage","sqsStatus","setSqsStatus","lambdaResponse","setLambdaResponse","cloudWatchMetrics","setCloudWatchMetrics","handleFileChange","e","target","files","handleUpload","formData","FormData","append","res","post","headers","data","fileUrl","err","console","error","handleSqsSend","message","MessageId","handleLambdaTrigger","result","fetchCloudWatchMetrics","get","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","marginBottom","type","onChange","onClick","placeholder","value","textAlign","background","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/brandon/Documents/Resume_Project/Smart_Inventory_Management/frontend/src/components/AWSDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction AWSDashboard() {\n  // S3 Upload state\n  const [file, setFile] = useState(null);\n  const [s3Status, setS3Status] = useState('');\n\n  // SQS state\n  const [sqsMessage, setSqsMessage] = useState('');\n  const [sqsStatus, setSqsStatus] = useState('');\n\n  // Lambda state\n  const [lambdaResponse, setLambdaResponse] = useState('');\n\n  // CloudWatch state\n  const [cloudWatchMetrics, setCloudWatchMetrics] = useState(null);\n\n  // --- S3 Upload Handler ---\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const res = await axios.post('http://localhost:5001/api/aws/upload', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      setS3Status(`Upload successful: ${res.data.fileUrl}`);\n    } catch (err) {\n      console.error(err);\n      setS3Status('Upload failed.');\n    }\n  };\n\n  // --- SQS Handler ---\n  const handleSqsSend = async () => {\n    if (!sqsMessage) return;\n    try {\n      const res = await axios.post('http://localhost:5001/api/aws/sqs', { message: sqsMessage });\n      setSqsStatus(`SQS message sent successfully (ID: ${res.data.MessageId})`);\n    } catch (error) {\n      console.error(error);\n      setSqsStatus('Error sending SQS message.');\n    }\n  };\n\n  // --- Lambda Handler ---\n  const handleLambdaTrigger = async () => {\n    try {\n      const res = await axios.post('http://localhost:5001/api/aws/lambda/trigger', {});\n      setLambdaResponse(`Lambda response: ${res.data.result}`);\n    } catch (error) {\n      console.error(error);\n      setLambdaResponse('Error triggering Lambda.');\n    }\n  };\n\n  // --- CloudWatch Handler ---\n  const fetchCloudWatchMetrics = async () => {\n    try {\n      const res = await axios.get('http://localhost:5001/api/aws/cloudwatch/metrics');\n      setCloudWatchMetrics(res.data.data);\n    } catch (error) {\n      console.error(error);\n      setCloudWatchMetrics('Error fetching CloudWatch metrics.');\n    }\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h2>AWS Integration Dashboard</h2>\n      \n      <section style={{ border: '1px solid #ccc', padding: '1rem', marginBottom: '1rem' }}>\n        <h3>S3 File Upload</h3>\n        <input type=\"file\" onChange={handleFileChange} />\n        <button onClick={handleUpload}>Upload File</button>\n        {s3Status && <p>{s3Status}</p>}\n      </section>\n\n      <section style={{ border: '1px solid #ccc', padding: '1rem', marginBottom: '1rem' }}>\n        <h3>SQS Test Message</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Enter SQS message\"\n          value={sqsMessage}\n          onChange={(e) => setSqsMessage(e.target.value)}\n        />\n        <button onClick={handleSqsSend}>Send SQS Message</button>\n        {sqsStatus && <p>{sqsStatus}</p>}\n      </section>\n\n      <section style={{ border: '1px solid #ccc', padding: '1rem', marginBottom: '1rem' }}>\n        <h3>Lambda Trigger Test</h3>\n        <button onClick={handleLambdaTrigger}>Trigger Lambda Function</button>\n        {lambdaResponse && <p>{lambdaResponse}</p>}\n      </section>\n\n      <section style={{ border: '1px solid #ccc', padding: '1rem', marginBottom: '1rem' }}>\n        <h3>CloudWatch Metrics</h3>\n        <button onClick={fetchCloudWatchMetrics}>Fetch Metrics</button>\n        {cloudWatchMetrics && (\n          <pre style={{ textAlign: 'left', background: '#f4f4f4', padding: '1rem' }}>\n            {typeof cloudWatchMetrics === 'string'\n              ? cloudWatchMetrics\n              : JSON.stringify(cloudWatchMetrics, null, 2)}\n          </pre>\n        )}\n      </section>\n    </div>\n  );\n}\n\nexport default AWSDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}