{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/Documents/Resume_Project/Smart_Inventory_Management/frontend/src/components/NotificationsPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ListGroup, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotificationsPanel() {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n  const fetchNotifications = async () => {\n    try {\n      const res = await axios.get('http://localhost:5001/api/notifications');\n      setNotifications(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const markAsRead = async id => {\n    try {\n      await axios.put(`http://localhost:5001/api/notifications/${id}/read`);\n      fetchNotifications();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: notifications.map(n => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        variant: n.isRead ? 'light' : 'warning',\n        children: [n.message, !n.isRead && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          size: \"sm\",\n          onClick: () => markAsRead(n.id),\n          children: \"Mark as Read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)]\n      }, n.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(NotificationsPanel, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = NotificationsPanel;\nexport default NotificationsPanel;\nvar _c;\n$RefreshReg$(_c, \"NotificationsPanel\");","map":{"version":3,"names":["React","useEffect","useState","axios","ListGroup","Button","jsxDEV","_jsxDEV","NotificationsPanel","_s","notifications","setNotifications","fetchNotifications","res","get","data","err","console","error","markAsRead","id","put","children","fileName","_jsxFileName","lineNumber","columnNumber","map","n","Item","variant","isRead","message","size","onClick","_c","$RefreshReg$"],"sources":["/Users/brandon/Documents/Resume_Project/Smart_Inventory_Management/frontend/src/components/NotificationsPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ListGroup, Button } from 'react-bootstrap';\n\nfunction NotificationsPanel() {\n  const [notifications, setNotifications] = useState([]);\n\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n\n  const fetchNotifications = async () => {\n    try {\n      const res = await axios.get('http://localhost:5001/api/notifications');\n      setNotifications(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const markAsRead = async (id) => {\n    try {\n      await axios.put(`http://localhost:5001/api/notifications/${id}/read`);\n      fetchNotifications();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Notifications</h3>\n      <ListGroup>\n        {notifications.map((n) => (\n          <ListGroup.Item key={n.id} variant={n.isRead ? 'light' : 'warning'}>\n            {n.message}\n            {!n.isRead && (\n              <Button variant=\"outline-success\" size=\"sm\" onClick={() => markAsRead(n.id)}>\n                Mark as Read\n              </Button>\n            )}\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    </div>\n  );\n}\n\nexport default NotificationsPanel;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACdW,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,yCAAyC,CAAC;MACtEH,gBAAgB,CAACE,GAAG,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,MAAMG,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/B,IAAI;MACF,MAAMjB,KAAK,CAACkB,GAAG,CAAC,2CAA2CD,EAAE,OAAO,CAAC;MACrER,kBAAkB,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACET,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBnB,OAAA,CAACH,SAAS;MAAAkB,QAAA,EACPZ,aAAa,CAACiB,GAAG,CAAEC,CAAC,iBACnBrB,OAAA,CAACH,SAAS,CAACyB,IAAI;QAAYC,OAAO,EAAEF,CAAC,CAACG,MAAM,GAAG,OAAO,GAAG,SAAU;QAAAT,QAAA,GAChEM,CAAC,CAACI,OAAO,EACT,CAACJ,CAAC,CAACG,MAAM,iBACRxB,OAAA,CAACF,MAAM;UAACyB,OAAO,EAAC,iBAAiB;UAACG,IAAI,EAAC,IAAI;UAACC,OAAO,EAAEA,CAAA,KAAMf,UAAU,CAACS,CAAC,CAACR,EAAE,CAAE;UAAAE,QAAA,EAAC;QAE7E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA,GANkBE,CAAC,CAACR,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOT,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACjB,EAAA,CA1CQD,kBAAkB;AAAA2B,EAAA,GAAlB3B,kBAAkB;AA4C3B,eAAeA,kBAAkB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}