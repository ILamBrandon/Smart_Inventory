{"ast":null,"code":"// frontend/src/components/InventoryDashboard.js\nimport React,{useEffect,useState}from'react';import axios from'axios';import{Bar,Doughnut}from'react-chartjs-2';import{Card,Row,Col,ListGroup,Button}from'react-bootstrap';import'chart.js/auto';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function InventoryDashboard(){const[chartData,setChartData]=useState({labels:[],datasets:[]});const[lowStockProducts,setLowStockProducts]=useState([]);const[analytics,setAnalytics]=useState({totalProducts:0,lowStockProducts:0,totalOrders:0,averageOrderQuantity:0});useEffect(()=>{fetchLowStock();fetchChartData();fetchAnalytics();},[]);const fetchLowStock=async()=>{try{const res=await axios.get('http://localhost:5001/api/products/low-stock');setLowStockProducts(res.data);}catch(err){console.error('Error fetching low stock products:',err);}};const fetchChartData=async()=>{try{const res=await axios.get('http://localhost:5001/api/products');const products=res.data;const labels=products.map(p=>p.name);const quantities=products.map(p=>p.quantity);setChartData({labels,datasets:[{label:'Stock Level',data:quantities,backgroundColor:'rgba(75,192,192,0.6)'}]});}catch(err){console.error('Error fetching chart data:',err);}};const fetchAnalytics=async()=>{try{const res=await axios.get('http://localhost:5001/api/analytics/inventory-stats');setAnalytics(res.data);}catch(err){console.error('Error fetching analytics:',err);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Inventory Dashboard\"}),/*#__PURE__*/_jsxs(Row,{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(Col,{md:4,children:[/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:\"Low Stock Alerts\"}),/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:lowStockProducts.length>0?lowStockProducts.map(product=>/*#__PURE__*/_jsxs(ListGroup.Item,{children:[product.name,\" - \",product.quantity,\" in stock\"]},product.id)):/*#__PURE__*/_jsx(ListGroup.Item,{children:\"No low stock products.\"})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mt-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:\"Analytics Summary\"}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Total Products: \",analytics.totalProducts]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Low Stock: \",analytics.lowStockProducts]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total Orders: \",analytics.totalOrders]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Avg. Order Qty: \",analytics.averageOrderQuantity.toFixed(2)]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"sm\",children:\"View Detailed Report\"})]})]})]}),/*#__PURE__*/_jsxs(Col,{md:8,children:[/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:\"Stock Levels\"}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(Bar,{data:chartData})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mt-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:\"Inventory Composition\"}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(Doughnut,{data:{labels:['Low Stock','Sufficient Stock'],datasets:[{data:[analytics.lowStockProducts,analytics.totalProducts-analytics.lowStockProducts],backgroundColor:['#FF6384','#36A2EB']}]}})})]})]})]})]});}export default InventoryDashboard;","map":{"version":3,"names":["React","useEffect","useState","axios","Bar","Doughnut","Card","Row","Col","ListGroup","Button","jsx","_jsx","jsxs","_jsxs","InventoryDashboard","chartData","setChartData","labels","datasets","lowStockProducts","setLowStockProducts","analytics","setAnalytics","totalProducts","totalOrders","averageOrderQuantity","fetchLowStock","fetchChartData","fetchAnalytics","res","get","data","err","console","error","products","map","p","name","quantities","quantity","label","backgroundColor","children","className","md","Header","variant","length","product","Item","id","Body","toFixed","size"],"sources":["/Users/brandon/Documents/Resume_Project/Smart_Inventory_Management/frontend/src/components/InventoryDashboard.js"],"sourcesContent":["// frontend/src/components/InventoryDashboard.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport { Card, Row, Col, ListGroup, Button } from 'react-bootstrap';\nimport 'chart.js/auto';\n\nfunction InventoryDashboard() {\n  const [chartData, setChartData] = useState({ labels: [], datasets: [] });\n  const [lowStockProducts, setLowStockProducts] = useState([]);\n  const [analytics, setAnalytics] = useState({ totalProducts: 0, lowStockProducts: 0, totalOrders: 0, averageOrderQuantity: 0 });\n\n  useEffect(() => {\n    fetchLowStock();\n    fetchChartData();\n    fetchAnalytics();\n  }, []);\n\n  const fetchLowStock = async () => {\n    try {\n      const res = await axios.get('http://localhost:5001/api/products/low-stock');\n      setLowStockProducts(res.data);\n    } catch (err) {\n      console.error('Error fetching low stock products:', err);\n    }\n  };\n\n  const fetchChartData = async () => {\n    try {\n      const res = await axios.get('http://localhost:5001/api/products');\n      const products = res.data;\n      const labels = products.map(p => p.name);\n      const quantities = products.map(p => p.quantity);\n\n      setChartData({\n        labels,\n        datasets: [\n          {\n            label: 'Stock Level',\n            data: quantities,\n            backgroundColor: 'rgba(75,192,192,0.6)',\n          }\n        ]\n      });\n    } catch (err) {\n      console.error('Error fetching chart data:', err);\n    }\n  };\n\n  const fetchAnalytics = async () => {\n    try {\n      const res = await axios.get('http://localhost:5001/api/analytics/inventory-stats');\n      setAnalytics(res.data);\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Inventory Dashboard</h2>\n      <Row className=\"mb-4\">\n        <Col md={4}>\n          <Card>\n            <Card.Header>Low Stock Alerts</Card.Header>\n            <ListGroup variant=\"flush\">\n              {lowStockProducts.length > 0 ? (\n                lowStockProducts.map(product => (\n                  <ListGroup.Item key={product.id}>\n                    {product.name} - {product.quantity} in stock\n                  </ListGroup.Item>\n                ))\n              ) : (\n                <ListGroup.Item>No low stock products.</ListGroup.Item>\n              )}\n            </ListGroup>\n          </Card>\n          <Card className=\"mt-4\">\n            <Card.Header>Analytics Summary</Card.Header>\n            <Card.Body>\n              <p>Total Products: {analytics.totalProducts}</p>\n              <p>Low Stock: {analytics.lowStockProducts}</p>\n              <p>Total Orders: {analytics.totalOrders}</p>\n              <p>Avg. Order Qty: {analytics.averageOrderQuantity.toFixed(2)}</p>\n              <Button variant=\"primary\" size=\"sm\">View Detailed Report</Button>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={8}>\n          <Card>\n            <Card.Header>Stock Levels</Card.Header>\n            <Card.Body>\n              <Bar data={chartData} />\n            </Card.Body>\n          </Card>\n          <Card className=\"mt-4\">\n            <Card.Header>Inventory Composition</Card.Header>\n            <Card.Body>\n              <Doughnut \n                data={{\n                  labels: ['Low Stock', 'Sufficient Stock'],\n                  datasets: [{\n                    data: [analytics.lowStockProducts, analytics.totalProducts - analytics.lowStockProducts],\n                    backgroundColor: ['#FF6384', '#36A2EB'],\n                  }]\n                }} \n              />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default InventoryDashboard;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,GAAG,CAAEC,QAAQ,KAAQ,iBAAiB,CAC/C,OAASC,IAAI,CAAEC,GAAG,CAAEC,GAAG,CAAEC,SAAS,CAAEC,MAAM,KAAQ,iBAAiB,CACnE,MAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvB,QAAS,CAAAC,kBAAkBA,CAAA,CAAG,CAC5B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGf,QAAQ,CAAC,CAAEgB,MAAM,CAAE,EAAE,CAAEC,QAAQ,CAAE,EAAG,CAAC,CAAC,CACxE,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAACoB,SAAS,CAAEC,YAAY,CAAC,CAAGrB,QAAQ,CAAC,CAAEsB,aAAa,CAAE,CAAC,CAAEJ,gBAAgB,CAAE,CAAC,CAAEK,WAAW,CAAE,CAAC,CAAEC,oBAAoB,CAAE,CAAE,CAAC,CAAC,CAE9HzB,SAAS,CAAC,IAAM,CACd0B,aAAa,CAAC,CAAC,CACfC,cAAc,CAAC,CAAC,CAChBC,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAF,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAG,GAAG,CAAG,KAAM,CAAA3B,KAAK,CAAC4B,GAAG,CAAC,8CAA8C,CAAC,CAC3EV,mBAAmB,CAACS,GAAG,CAACE,IAAI,CAAC,CAC/B,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAEF,GAAG,CAAC,CAC1D,CACF,CAAC,CAED,KAAM,CAAAL,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAE,GAAG,CAAG,KAAM,CAAA3B,KAAK,CAAC4B,GAAG,CAAC,oCAAoC,CAAC,CACjE,KAAM,CAAAK,QAAQ,CAAGN,GAAG,CAACE,IAAI,CACzB,KAAM,CAAAd,MAAM,CAAGkB,QAAQ,CAACC,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACC,IAAI,CAAC,CACxC,KAAM,CAAAC,UAAU,CAAGJ,QAAQ,CAACC,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACG,QAAQ,CAAC,CAEhDxB,YAAY,CAAC,CACXC,MAAM,CACNC,QAAQ,CAAE,CACR,CACEuB,KAAK,CAAE,aAAa,CACpBV,IAAI,CAAEQ,UAAU,CAChBG,eAAe,CAAE,sBACnB,CAAC,CAEL,CAAC,CAAC,CACJ,CAAE,MAAOV,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAEF,GAAG,CAAC,CAClD,CACF,CAAC,CAED,KAAM,CAAAJ,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAA3B,KAAK,CAAC4B,GAAG,CAAC,qDAAqD,CAAC,CAClFR,YAAY,CAACO,GAAG,CAACE,IAAI,CAAC,CACxB,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAEF,GAAG,CAAC,CACjD,CACF,CAAC,CAED,mBACEnB,KAAA,QAAA8B,QAAA,eACEhC,IAAA,OAAAgC,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5B9B,KAAA,CAACP,GAAG,EAACsC,SAAS,CAAC,MAAM,CAAAD,QAAA,eACnB9B,KAAA,CAACN,GAAG,EAACsC,EAAE,CAAE,CAAE,CAAAF,QAAA,eACT9B,KAAA,CAACR,IAAI,EAAAsC,QAAA,eACHhC,IAAA,CAACN,IAAI,CAACyC,MAAM,EAAAH,QAAA,CAAC,kBAAgB,CAAa,CAAC,cAC3ChC,IAAA,CAACH,SAAS,EAACuC,OAAO,CAAC,OAAO,CAAAJ,QAAA,CACvBxB,gBAAgB,CAAC6B,MAAM,CAAG,CAAC,CAC1B7B,gBAAgB,CAACiB,GAAG,CAACa,OAAO,eAC1BpC,KAAA,CAACL,SAAS,CAAC0C,IAAI,EAAAP,QAAA,EACZM,OAAO,CAACX,IAAI,CAAC,KAAG,CAACW,OAAO,CAACT,QAAQ,CAAC,WACrC,GAFqBS,OAAO,CAACE,EAEb,CACjB,CAAC,cAEFxC,IAAA,CAACH,SAAS,CAAC0C,IAAI,EAAAP,QAAA,CAAC,wBAAsB,CAAgB,CACvD,CACQ,CAAC,EACR,CAAC,cACP9B,KAAA,CAACR,IAAI,EAACuC,SAAS,CAAC,MAAM,CAAAD,QAAA,eACpBhC,IAAA,CAACN,IAAI,CAACyC,MAAM,EAAAH,QAAA,CAAC,mBAAiB,CAAa,CAAC,cAC5C9B,KAAA,CAACR,IAAI,CAAC+C,IAAI,EAAAT,QAAA,eACR9B,KAAA,MAAA8B,QAAA,EAAG,kBAAgB,CAACtB,SAAS,CAACE,aAAa,EAAI,CAAC,cAChDV,KAAA,MAAA8B,QAAA,EAAG,aAAW,CAACtB,SAAS,CAACF,gBAAgB,EAAI,CAAC,cAC9CN,KAAA,MAAA8B,QAAA,EAAG,gBAAc,CAACtB,SAAS,CAACG,WAAW,EAAI,CAAC,cAC5CX,KAAA,MAAA8B,QAAA,EAAG,kBAAgB,CAACtB,SAAS,CAACI,oBAAoB,CAAC4B,OAAO,CAAC,CAAC,CAAC,EAAI,CAAC,cAClE1C,IAAA,CAACF,MAAM,EAACsC,OAAO,CAAC,SAAS,CAACO,IAAI,CAAC,IAAI,CAAAX,QAAA,CAAC,sBAAoB,CAAQ,CAAC,EACxD,CAAC,EACR,CAAC,EACJ,CAAC,cACN9B,KAAA,CAACN,GAAG,EAACsC,EAAE,CAAE,CAAE,CAAAF,QAAA,eACT9B,KAAA,CAACR,IAAI,EAAAsC,QAAA,eACHhC,IAAA,CAACN,IAAI,CAACyC,MAAM,EAAAH,QAAA,CAAC,cAAY,CAAa,CAAC,cACvChC,IAAA,CAACN,IAAI,CAAC+C,IAAI,EAAAT,QAAA,cACRhC,IAAA,CAACR,GAAG,EAAC4B,IAAI,CAAEhB,SAAU,CAAE,CAAC,CACf,CAAC,EACR,CAAC,cACPF,KAAA,CAACR,IAAI,EAACuC,SAAS,CAAC,MAAM,CAAAD,QAAA,eACpBhC,IAAA,CAACN,IAAI,CAACyC,MAAM,EAAAH,QAAA,CAAC,uBAAqB,CAAa,CAAC,cAChDhC,IAAA,CAACN,IAAI,CAAC+C,IAAI,EAAAT,QAAA,cACRhC,IAAA,CAACP,QAAQ,EACP2B,IAAI,CAAE,CACJd,MAAM,CAAE,CAAC,WAAW,CAAE,kBAAkB,CAAC,CACzCC,QAAQ,CAAE,CAAC,CACTa,IAAI,CAAE,CAACV,SAAS,CAACF,gBAAgB,CAAEE,SAAS,CAACE,aAAa,CAAGF,SAAS,CAACF,gBAAgB,CAAC,CACxFuB,eAAe,CAAE,CAAC,SAAS,CAAE,SAAS,CACxC,CAAC,CACH,CAAE,CACH,CAAC,CACO,CAAC,EACR,CAAC,EACJ,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAA5B,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}