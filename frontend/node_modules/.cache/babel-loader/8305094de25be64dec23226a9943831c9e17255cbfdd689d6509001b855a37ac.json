{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{ListGroup,Button}from'react-bootstrap';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function NotificationsPanel(){const[notifications,setNotifications]=useState([]);useEffect(()=>{fetchNotifications();},[]);const fetchNotifications=async()=>{try{const res=await axios.get('http://localhost:5001/api/notifications');setNotifications(res.data);}catch(err){console.error(err);}};const markAsRead=async id=>{try{await axios.put(`http://localhost:5001/api/notifications/${id}/read`);fetchNotifications();}catch(err){console.error(err);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Notifications\"}),/*#__PURE__*/_jsx(ListGroup,{children:notifications.map(n=>/*#__PURE__*/_jsxs(ListGroup.Item,{variant:n.isRead?'light':'warning',children:[n.message,!n.isRead&&/*#__PURE__*/_jsx(Button,{variant:\"outline-success\",size:\"sm\",onClick:()=>markAsRead(n.id),children:\"Mark as Read\"})]},n.id))})]});}export default NotificationsPanel;","map":{"version":3,"names":["React","useEffect","useState","axios","ListGroup","Button","jsx","_jsx","jsxs","_jsxs","NotificationsPanel","notifications","setNotifications","fetchNotifications","res","get","data","err","console","error","markAsRead","id","put","children","map","n","Item","variant","isRead","message","size","onClick"],"sources":["/Users/brandon/Documents/Resume_Project/Smart_Inventory_Management/frontend/src/components/NotificationsPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ListGroup, Button } from 'react-bootstrap';\n\nfunction NotificationsPanel() {\n  const [notifications, setNotifications] = useState([]);\n\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n\n  const fetchNotifications = async () => {\n    try {\n      const res = await axios.get('http://localhost:5001/api/notifications');\n      setNotifications(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const markAsRead = async (id) => {\n    try {\n      await axios.put(`http://localhost:5001/api/notifications/${id}/read`);\n      fetchNotifications();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Notifications</h3>\n      <ListGroup>\n        {notifications.map((n) => (\n          <ListGroup.Item key={n.id} variant={n.isRead ? 'light' : 'warning'}>\n            {n.message}\n            {!n.isRead && (\n              <Button variant=\"outline-success\" size=\"sm\" onClick={() => markAsRead(n.id)}>\n                Mark as Read\n              </Button>\n            )}\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    </div>\n  );\n}\n\nexport default NotificationsPanel;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,CAAEC,MAAM,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpD,QAAS,CAAAC,kBAAkBA,CAAA,CAAG,CAC5B,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAEtDD,SAAS,CAAC,IAAM,CACdY,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,CAAC,yCAAyC,CAAC,CACtEH,gBAAgB,CAACE,GAAG,CAACE,IAAI,CAAC,CAC5B,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CACpB,CACF,CAAC,CAED,KAAM,CAAAG,UAAU,CAAG,KAAO,CAAAC,EAAE,EAAK,CAC/B,GAAI,CACF,KAAM,CAAAlB,KAAK,CAACmB,GAAG,CAAC,2CAA2CD,EAAE,OAAO,CAAC,CACrER,kBAAkB,CAAC,CAAC,CACtB,CAAE,MAAOI,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CACpB,CACF,CAAC,CAED,mBACER,KAAA,QAAAc,QAAA,eACEhB,IAAA,OAAAgB,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBhB,IAAA,CAACH,SAAS,EAAAmB,QAAA,CACPZ,aAAa,CAACa,GAAG,CAAEC,CAAC,eACnBhB,KAAA,CAACL,SAAS,CAACsB,IAAI,EAAYC,OAAO,CAAEF,CAAC,CAACG,MAAM,CAAG,OAAO,CAAG,SAAU,CAAAL,QAAA,EAChEE,CAAC,CAACI,OAAO,CACT,CAACJ,CAAC,CAACG,MAAM,eACRrB,IAAA,CAACF,MAAM,EAACsB,OAAO,CAAC,iBAAiB,CAACG,IAAI,CAAC,IAAI,CAACC,OAAO,CAAEA,CAAA,GAAMX,UAAU,CAACK,CAAC,CAACJ,EAAE,CAAE,CAAAE,QAAA,CAAC,cAE7E,CAAQ,CACT,GANkBE,CAAC,CAACJ,EAOP,CACjB,CAAC,CACO,CAAC,EACT,CAAC,CAEV,CAEA,cAAe,CAAAX,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}