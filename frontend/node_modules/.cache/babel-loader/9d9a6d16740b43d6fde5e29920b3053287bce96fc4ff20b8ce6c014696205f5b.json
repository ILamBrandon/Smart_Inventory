{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/Documents/Resume_Project/Smart_Inventory_Management/frontend/src/components/NavbarUI/AuthContext.js\",\n  _s = $RefreshSig$();\n// src/components/NavbarUI/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  // Initialize the auth state based on the token's existence\n  const [auth, setAuth] = useState(!!localStorage.getItem('token'));\n\n  // Optionally, use an effect to sync state if needed\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setAuth(!!token);\n  }, []);\n  const login = token => {\n    localStorage.setItem('token', token);\n    setAuth(true);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setAuth(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"J83pehk0el2gKAxJlWiAM8lAaHA=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","localStorage","getItem","token","login","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brandon/Documents/Resume_Project/Smart_Inventory_Management/frontend/src/components/NavbarUI/AuthContext.js"],"sourcesContent":["// src/components/NavbarUI/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\n\nexport const AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  // Initialize the auth state based on the token's existence\n  const [auth, setAuth] = useState(!!localStorage.getItem('token'));\n\n  // Optionally, use an effect to sync state if needed\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setAuth(!!token);\n  }, []);\n\n  const login = (token) => {\n    localStorage.setItem('token', token);\n    setAuth(true);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setAuth(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ auth, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAACU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;;EAEjE;EACAV,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CF,OAAO,CAAC,CAAC,CAACG,KAAK,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAID,KAAK,IAAK;IACvBF,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IACpCH,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACnBL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChCP,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,IAAI;MAAEK,KAAK;MAAEE;IAAO,CAAE;IAAAT,QAAA,EAClDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACf,EAAA,CAzBIF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}