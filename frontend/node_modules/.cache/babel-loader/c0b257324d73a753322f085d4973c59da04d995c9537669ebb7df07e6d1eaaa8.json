{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/Documents/Resume_Project/Smart_Inventory_Management/frontend/src/components/AuthLogin_Register/AuthPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport { useGoogleLogin } from '@react-oauth/google';\nimport { LinkedIn } from 'react-linkedin-login-oauth2';\nimport NotificationModal from '../Error_Success_Message_UI/MessageUI';\nimport './AuthPage.css';\n\n// Custom dropdown component for role selection\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoleSelect = ({\n  selectedRole,\n  setRole,\n  options,\n  placeholderText\n}) => {\n  _s();\n  var _options$find;\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const selectOption = val => {\n    setRole(val);\n    setDropdownOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-menu-custom\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-btn\",\n      onClick: () => setDropdownOpen(!dropdownOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"btn-text\",\n        children: selectedRole ? (_options$find = options.find(opt => opt.value === selectedRole)) === null || _options$find === void 0 ? void 0 : _options$find.label : placeholderText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bx bx-chevron-down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), dropdownOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-options\",\n      children: options.map(opt => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"dropdown-option\",\n        onClick: () => selectOption(opt.value),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: opt.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, opt.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleSelect, \"z5Nkh6K+y+CV4vT0AOyJ2ID9tJg=\");\n_c = RoleSelect;\nfunction AuthPage({\n  onLogin\n}) {\n  _s2();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [animate, setAnimate] = useState(true);\n  // State for controlling the modal notification\n  const [modalData, setModalData] = useState({\n    show: false,\n    header: '',\n    body: ''\n  });\n\n  // Shared fields\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Registration-only fields\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n  const roleList = [{\n    value: 'supplier',\n    label: 'Supplier'\n  }, {\n    value: 'owner',\n    label: 'Owner'\n  }, {\n    value: 'employee',\n    label: 'Employee'\n  }];\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    // Ensure role is selected when registering\n    if (!isLoginMode && !role) {\n      setModalData({\n        show: true,\n        header: 'Ooops!',\n        body: 'Please choose a role for registration.'\n      });\n      return;\n    }\n    try {\n      if (isLoginMode) {\n        const response = await axios.post('http://localhost:5001/api/auth/login', {\n          username,\n          password\n        });\n        onLogin(response.data.accessToken);\n      } else {\n        const regData = {\n          username,\n          password,\n          email,\n          role\n        };\n        await axios.post('http://localhost:5001/api/auth/signup', regData);\n        setModalData({\n          show: true,\n          header: 'Success!',\n          body: 'Registration successful! Please log in.'\n        });\n        setTimeout(() => {\n          toggleMode();\n          setModalData({\n            show: false,\n            header: '',\n            body: ''\n          });\n        }, 2000);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setModalData({\n        show: true,\n        header: 'Ooops!',\n        body: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || (isLoginMode ? 'Login failed. Please verify your credentials.' : 'Registration failed. Try again.')\n      });\n    }\n  };\n  const toggleMode = () => {\n    setAnimate(false);\n    setTimeout(() => {\n      setIsLoginMode(prev => !prev);\n      setUsername('');\n      setPassword('');\n      setEmail('');\n      setRole('');\n      setAnimate(true);\n    }, 300);\n  };\n  const handleSocialLogin = async (provider, response) => {\n    // Generate a dummy token for social login simulation\n    const token = `dummy-${provider}-token`;\n    onLogin(token);\n  };\n  const googleSignIn = useGoogleLogin({\n    onSuccess: credentialResponse => handleSocialLogin('google', credentialResponse),\n    onError: () => {}\n  });\n  const closeModal = () => setModalData({\n    show: false,\n    header: '',\n    body: ''\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Simplify your inventory management.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: `auth-card ${!isLoginMode ? 'register-style' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: animate ? 'fade-in' : 'fade-out',\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: isLoginMode ? 'Login' : 'Register'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleFormSubmit,\n            children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"roleSelect\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(RoleSelect, {\n                selectedRole: role,\n                setRole: setRole,\n                options: roleList,\n                placeholderText: \"Choose your role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"usernameInput\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), !isLoginMode && /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"emailInput\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"passwordInput\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              className: \"mb-3\",\n              children: isLoginMode ? 'Login' : 'Register'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divider\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: isLoginMode ? 'or login with' : 'or register with'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"social-login-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-info\",\n              className: \"google-button\",\n              onClick: googleSignIn,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://developers.google.com/identity/images/g-logo.png\",\n                alt: \"Google Logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), isLoginMode ? 'Login with Google' : 'Register with Google']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LinkedIn, {\n              clientId: \"86bco2ofgo5q6u\",\n              redirectUri: `${window.location.origin}/linkedin`,\n              onSuccess: code => handleSocialLogin('linkedin', code),\n              onError: () => {},\n              scope: \"openid profile email\",\n              children: ({\n                linkedInLogin,\n                disabled\n              }) => /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-info\",\n                className: \"linkedin-button\",\n                onClick: () => {\n                  if (typeof linkedInLogin === 'function') linkedInLogin();\n                },\n                disabled: disabled,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"https://cdn-icons-png.flaticon.com/512/174/174857.png\",\n                  alt: \"LinkedIn Logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this), isLoginMode ? 'Login with LinkedIn' : 'Register with LinkedIn']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-toggle text-center mt-3\",\n            children: isLoginMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: toggleMode,\n                style: {\n                  cursor: 'pointer',\n                  color: '#007bff',\n                  textDecoration: 'underline'\n                },\n                children: \"Register here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: toggleMode,\n                style: {\n                  cursor: 'pointer',\n                  color: '#007bff',\n                  textDecoration: 'underline'\n                },\n                children: \"Login here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationModal, {\n      show: modalData.show,\n      handleClose: closeModal,\n      headerText: modalData.header,\n      bodyText: modalData.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthPage, \"Fxag9mCHf/zogbu2a6oNqf8Rxdw=\", false, function () {\n  return [useGoogleLogin];\n});\n_c2 = AuthPage;\nexport default AuthPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"RoleSelect\");\n$RefreshReg$(_c2, \"AuthPage\");","map":{"version":3,"names":["React","useState","axios","Card","Form","Button","useGoogleLogin","LinkedIn","NotificationModal","jsxDEV","_jsxDEV","Fragment","_Fragment","RoleSelect","selectedRole","setRole","options","placeholderText","_s","_options$find","dropdownOpen","setDropdownOpen","selectOption","val","className","children","onClick","find","opt","value","label","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","AuthPage","onLogin","_s2","isLoginMode","setIsLoginMode","animate","setAnimate","modalData","setModalData","show","header","body","username","setUsername","password","setPassword","email","setEmail","role","roleList","handleFormSubmit","event","preventDefault","response","post","data","accessToken","regData","setTimeout","toggleMode","error","_error$response","_error$response$data","prev","handleSocialLogin","provider","token","googleSignIn","onSuccess","credentialResponse","onError","closeModal","Body","onSubmit","Group","controlId","Label","Control","type","onChange","e","target","required","variant","src","alt","clientId","redirectUri","window","location","origin","code","scope","linkedInLogin","disabled","style","cursor","color","textDecoration","handleClose","headerText","bodyText","_c2","$RefreshReg$"],"sources":["/Users/brandon/Documents/Resume_Project/Smart_Inventory_Management/frontend/src/components/AuthLogin_Register/AuthPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport { useGoogleLogin } from '@react-oauth/google';\nimport { LinkedIn } from 'react-linkedin-login-oauth2';\nimport NotificationModal from '../Error_Success_Message_UI/MessageUI';\nimport './AuthPage.css';\n\n// Custom dropdown component for role selection\nconst RoleSelect = ({ selectedRole, setRole, options, placeholderText }) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const selectOption = (val) => {\n    setRole(val);\n    setDropdownOpen(false);\n  };\n\n  return (\n    <div className=\"dropdown-menu-custom\">\n      <div className=\"dropdown-btn\" onClick={() => setDropdownOpen(!dropdownOpen)}>\n        <span className=\"btn-text\">\n          {selectedRole ? options.find(opt => opt.value === selectedRole)?.label : placeholderText}\n        </span>\n        <i className=\"bx bx-chevron-down\"></i>\n      </div>\n      {dropdownOpen && (\n        <ul className=\"dropdown-options\">\n          {options.map(opt => (\n            <li key={opt.value} className=\"dropdown-option\" onClick={() => selectOption(opt.value)}>\n              <span>{opt.label}</span>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nfunction AuthPage({ onLogin }) {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [animate, setAnimate] = useState(true);\n  // State for controlling the modal notification\n  const [modalData, setModalData] = useState({ show: false, header: '', body: '' });\n\n  // Shared fields\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  \n  // Registration-only fields\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n\n  const roleList = [\n    { value: 'supplier', label: 'Supplier' },\n    { value: 'owner', label: 'Owner' },\n    { value: 'employee', label: 'Employee' }\n  ];\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // Ensure role is selected when registering\n    if (!isLoginMode && !role) {\n      setModalData({ show: true, header: 'Ooops!', body: 'Please choose a role for registration.' });\n      return;\n    }\n\n    try {\n      if (isLoginMode) {\n        const response = await axios.post('http://localhost:5001/api/auth/login', { username, password });\n        onLogin(response.data.accessToken);\n      } else {\n        const regData = { username, password, email, role };\n        await axios.post('http://localhost:5001/api/auth/signup', regData);\n        setModalData({ show: true, header: 'Success!', body: 'Registration successful! Please log in.' });\n        setTimeout(() => {\n          toggleMode();\n          setModalData({ show: false, header: '', body: '' });\n        }, 2000);\n      }\n    } catch (error) {\n      setModalData({\n        show: true,\n        header: 'Ooops!',\n        body: error.response?.data?.error ||\n              (isLoginMode\n                ? 'Login failed. Please verify your credentials.'\n                : 'Registration failed. Try again.')\n      });\n    }\n  };\n\n  const toggleMode = () => {\n    setAnimate(false);\n    setTimeout(() => {\n      setIsLoginMode(prev => !prev);\n      setUsername('');\n      setPassword('');\n      setEmail('');\n      setRole('');\n      setAnimate(true);\n    }, 300);\n  };\n\n  const handleSocialLogin = async (provider, response) => {\n    // Generate a dummy token for social login simulation\n    const token = `dummy-${provider}-token`;\n    onLogin(token);\n  };\n\n  const googleSignIn = useGoogleLogin({\n    onSuccess: credentialResponse => handleSocialLogin('google', credentialResponse),\n    onError: () => {}\n  });\n\n  const closeModal = () => setModalData({ show: false, header: '', body: '' });\n\n  return (\n    <div className=\"auth-page\">\n      {/* Left Panel */}\n      <div className=\"left-panel\">\n        <div className=\"left-panel-content\">\n          <h1>Welcome</h1>\n          <p>Simplify your inventory management.</p>\n        </div>\n      </div>\n\n      {/* Right Panel */}\n      <div className=\"right-panel\">\n        <Card className={`auth-card ${!isLoginMode ? 'register-style' : ''}`}>\n          <Card.Body className={animate ? 'fade-in' : 'fade-out'}>\n            <h4>{isLoginMode ? 'Login' : 'Register'}</h4>\n            <Form onSubmit={handleFormSubmit}>\n              {!isLoginMode && (\n                <Form.Group className=\"mb-3\" controlId=\"roleSelect\">\n                  <Form.Label>Role</Form.Label>\n                  <RoleSelect\n                    selectedRole={role}\n                    setRole={setRole}\n                    options={roleList}\n                    placeholderText=\"Choose your role\"\n                  />\n                </Form.Group>\n              )}\n              <Form.Group className=\"mb-3\" controlId=\"usernameInput\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" value={username} onChange={e => setUsername(e.target.value)} required />\n              </Form.Group>\n              {!isLoginMode && (\n                <Form.Group className=\"mb-3\" controlId=\"emailInput\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control type=\"email\" value={email} onChange={e => setEmail(e.target.value)} required />\n                </Form.Group>\n              )}\n              <Form.Group className=\"mb-3\" controlId=\"passwordInput\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" value={password} onChange={e => setPassword(e.target.value)} required />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\" className=\"mb-3\">\n                {isLoginMode ? 'Login' : 'Register'}\n              </Button>\n            </Form>\n            <div className=\"divider\">\n              <span>{isLoginMode ? 'or login with' : 'or register with'}</span>\n            </div>\n            <div className=\"social-login-buttons\">\n              <Button variant=\"outline-info\" className=\"google-button\" onClick={googleSignIn}>\n                <img src=\"https://developers.google.com/identity/images/g-logo.png\" alt=\"Google Logo\" />\n                {isLoginMode ? 'Login with Google' : 'Register with Google'}\n              </Button>\n              <LinkedIn\n                clientId=\"86bco2ofgo5q6u\"\n                redirectUri={`${window.location.origin}/linkedin`}\n                onSuccess={code => handleSocialLogin('linkedin', code)}\n                onError={() => {}}\n                scope=\"openid profile email\"\n              >\n                {({ linkedInLogin, disabled }) => (\n                  <Button\n                    variant=\"outline-info\"\n                    className=\"linkedin-button\"\n                    onClick={() => { if (typeof linkedInLogin === 'function') linkedInLogin(); }}\n                    disabled={disabled}\n                  >\n                    <img src=\"https://cdn-icons-png.flaticon.com/512/174/174857.png\" alt=\"LinkedIn Logo\" />\n                    {isLoginMode ? 'Login with LinkedIn' : 'Register with LinkedIn'}\n                  </Button>\n                )}\n              </LinkedIn>\n            </div>\n            <div className=\"account-toggle text-center mt-3\">\n              {isLoginMode ? (\n                <>\n                  Don't have an account?{' '}\n                  <span onClick={toggleMode} style={{ cursor: 'pointer', color: '#007bff', textDecoration: 'underline' }}>\n                    Register here\n                  </span>\n                </>\n              ) : (\n                <>\n                  Already have an account?{' '}\n                  <span onClick={toggleMode} style={{ cursor: 'pointer', color: '#007bff', textDecoration: 'underline' }}>\n                    Login here\n                  </span>\n                </>\n              )}\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n      {/* Notification Modal */}\n      <NotificationModal\n        show={modalData.show}\n        handleClose={closeModal}\n        headerText={modalData.header}\n        bodyText={modalData.body}\n      />\n    </div>\n  );\n}\n\nexport default AuthPage;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AACpD,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,OAAOC,iBAAiB,MAAM,uCAAuC;AACrE,OAAO,gBAAgB;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,UAAU,GAAGA,CAAC;EAAEC,YAAY;EAAEC,OAAO;EAAEC,OAAO;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,aAAA;EAC1E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMqB,YAAY,GAAIC,GAAG,IAAK;IAC5BR,OAAO,CAACQ,GAAG,CAAC;IACZF,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACEX,OAAA;IAAKc,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCf,OAAA;MAAKc,SAAS,EAAC,cAAc;MAACE,OAAO,EAAEA,CAAA,KAAML,eAAe,CAAC,CAACD,YAAY,CAAE;MAAAK,QAAA,gBAC1Ef,OAAA;QAAMc,SAAS,EAAC,UAAU;QAAAC,QAAA,EACvBX,YAAY,IAAAK,aAAA,GAAGH,OAAO,CAACW,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,KAAKf,YAAY,CAAC,cAAAK,aAAA,uBAA/CA,aAAA,CAAiDW,KAAK,GAAGb;MAAe;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpF,CAAC,eACPxB,OAAA;QAAGc,SAAS,EAAC;MAAoB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EACLd,YAAY,iBACXV,OAAA;MAAIc,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC7BT,OAAO,CAACmB,GAAG,CAACP,GAAG,iBACdlB,OAAA;QAAoBc,SAAS,EAAC,iBAAiB;QAACE,OAAO,EAAEA,CAAA,KAAMJ,YAAY,CAACM,GAAG,CAACC,KAAK,CAAE;QAAAJ,QAAA,eACrFf,OAAA;UAAAe,QAAA,EAAOG,GAAG,CAACE;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GADjBN,GAAG,CAACC,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CA3BIL,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AA6BhB,SAASwB,QAAQA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,GAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACyC,OAAO,EAAEC,UAAU,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAC5C;EACA,MAAM,CAAC2C,SAAS,EAAEC,YAAY,CAAC,GAAG5C,QAAQ,CAAC;IAAE6C,IAAI,EAAE,KAAK;IAAEC,MAAM,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;;EAEjF;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkD,QAAQ,EAAEC,WAAW,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAM,CAACoD,KAAK,EAAEC,QAAQ,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsD,IAAI,EAAExC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMuD,QAAQ,GAAG,CACf;IAAE3B,KAAK,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAW,CAAC,EACxC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,KAAK,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAW,CAAC,CACzC;EAED,MAAM2B,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxCA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;IACA,IAAI,CAACnB,WAAW,IAAI,CAACe,IAAI,EAAE;MACzBV,YAAY,CAAC;QAAEC,IAAI,EAAE,IAAI;QAAEC,MAAM,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAyC,CAAC,CAAC;MAC9F;IACF;IAEA,IAAI;MACF,IAAIR,WAAW,EAAE;QACf,MAAMoB,QAAQ,GAAG,MAAM1D,KAAK,CAAC2D,IAAI,CAAC,sCAAsC,EAAE;UAAEZ,QAAQ;UAAEE;QAAS,CAAC,CAAC;QACjGb,OAAO,CAACsB,QAAQ,CAACE,IAAI,CAACC,WAAW,CAAC;MACpC,CAAC,MAAM;QACL,MAAMC,OAAO,GAAG;UAAEf,QAAQ;UAAEE,QAAQ;UAAEE,KAAK;UAAEE;QAAK,CAAC;QACnD,MAAMrD,KAAK,CAAC2D,IAAI,CAAC,uCAAuC,EAAEG,OAAO,CAAC;QAClEnB,YAAY,CAAC;UAAEC,IAAI,EAAE,IAAI;UAAEC,MAAM,EAAE,UAAU;UAAEC,IAAI,EAAE;QAA0C,CAAC,CAAC;QACjGiB,UAAU,CAAC,MAAM;UACfC,UAAU,CAAC,CAAC;UACZrB,YAAY,CAAC;YAAEC,IAAI,EAAE,KAAK;YAAEC,MAAM,EAAE,EAAE;YAAEC,IAAI,EAAE;UAAG,CAAC,CAAC;QACrD,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdxB,YAAY,CAAC;QACXC,IAAI,EAAE,IAAI;QACVC,MAAM,EAAE,QAAQ;QAChBC,IAAI,EAAE,EAAAoB,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBN,IAAI,cAAAO,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,MAC1B3B,WAAW,GACR,+CAA+C,GAC/C,iCAAiC;MAC7C,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAM0B,UAAU,GAAGA,CAAA,KAAM;IACvBvB,UAAU,CAAC,KAAK,CAAC;IACjBsB,UAAU,CAAC,MAAM;MACfxB,cAAc,CAAC6B,IAAI,IAAI,CAACA,IAAI,CAAC;MAC7BpB,WAAW,CAAC,EAAE,CAAC;MACfE,WAAW,CAAC,EAAE,CAAC;MACfE,QAAQ,CAAC,EAAE,CAAC;MACZvC,OAAO,CAAC,EAAE,CAAC;MACX4B,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,MAAM4B,iBAAiB,GAAG,MAAAA,CAAOC,QAAQ,EAAEZ,QAAQ,KAAK;IACtD;IACA,MAAMa,KAAK,GAAG,SAASD,QAAQ,QAAQ;IACvClC,OAAO,CAACmC,KAAK,CAAC;EAChB,CAAC;EAED,MAAMC,YAAY,GAAGpE,cAAc,CAAC;IAClCqE,SAAS,EAAEC,kBAAkB,IAAIL,iBAAiB,CAAC,QAAQ,EAAEK,kBAAkB,CAAC;IAChFC,OAAO,EAAEA,CAAA,KAAM,CAAC;EAClB,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAGA,CAAA,KAAMjC,YAAY,CAAC;IAAEC,IAAI,EAAE,KAAK;IAAEC,MAAM,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAE5E,oBACEtC,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAExBf,OAAA;MAAKc,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBf,OAAA;QAAKc,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCf,OAAA;UAAAe,QAAA,EAAI;QAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBxB,OAAA;UAAAe,QAAA,EAAG;QAAmC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNxB,OAAA;MAAKc,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1Bf,OAAA,CAACP,IAAI;QAACqB,SAAS,EAAE,aAAa,CAACgB,WAAW,GAAG,gBAAgB,GAAG,EAAE,EAAG;QAAAf,QAAA,eACnEf,OAAA,CAACP,IAAI,CAAC4E,IAAI;UAACvD,SAAS,EAAEkB,OAAO,GAAG,SAAS,GAAG,UAAW;UAAAjB,QAAA,gBACrDf,OAAA;YAAAe,QAAA,EAAKe,WAAW,GAAG,OAAO,GAAG;UAAU;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7CxB,OAAA,CAACN,IAAI;YAAC4E,QAAQ,EAAEvB,gBAAiB;YAAAhC,QAAA,GAC9B,CAACe,WAAW,iBACX9B,OAAA,CAACN,IAAI,CAAC6E,KAAK;cAACzD,SAAS,EAAC,MAAM;cAAC0D,SAAS,EAAC,YAAY;cAAAzD,QAAA,gBACjDf,OAAA,CAACN,IAAI,CAAC+E,KAAK;gBAAA1D,QAAA,EAAC;cAAI;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC7BxB,OAAA,CAACG,UAAU;gBACTC,YAAY,EAAEyC,IAAK;gBACnBxC,OAAO,EAAEA,OAAQ;gBACjBC,OAAO,EAAEwC,QAAS;gBAClBvC,eAAe,EAAC;cAAkB;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ,CACb,eACDxB,OAAA,CAACN,IAAI,CAAC6E,KAAK;cAACzD,SAAS,EAAC,MAAM;cAAC0D,SAAS,EAAC,eAAe;cAAAzD,QAAA,gBACpDf,OAAA,CAACN,IAAI,CAAC+E,KAAK;gBAAA1D,QAAA,EAAC;cAAQ;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACjCxB,OAAA,CAACN,IAAI,CAACgF,OAAO;gBAACC,IAAI,EAAC,MAAM;gBAACxD,KAAK,EAAEoB,QAAS;gBAACqC,QAAQ,EAAEC,CAAC,IAAIrC,WAAW,CAACqC,CAAC,CAACC,MAAM,CAAC3D,KAAK,CAAE;gBAAC4D,QAAQ;cAAA;gBAAA1D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxF,CAAC,EACZ,CAACM,WAAW,iBACX9B,OAAA,CAACN,IAAI,CAAC6E,KAAK;cAACzD,SAAS,EAAC,MAAM;cAAC0D,SAAS,EAAC,YAAY;cAAAzD,QAAA,gBACjDf,OAAA,CAACN,IAAI,CAAC+E,KAAK;gBAAA1D,QAAA,EAAC;cAAK;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC9BxB,OAAA,CAACN,IAAI,CAACgF,OAAO;gBAACC,IAAI,EAAC,OAAO;gBAACxD,KAAK,EAAEwB,KAAM;gBAACiC,QAAQ,EAAEC,CAAC,IAAIjC,QAAQ,CAACiC,CAAC,CAACC,MAAM,CAAC3D,KAAK,CAAE;gBAAC4D,QAAQ;cAAA;gBAAA1D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnF,CACb,eACDxB,OAAA,CAACN,IAAI,CAAC6E,KAAK;cAACzD,SAAS,EAAC,MAAM;cAAC0D,SAAS,EAAC,eAAe;cAAAzD,QAAA,gBACpDf,OAAA,CAACN,IAAI,CAAC+E,KAAK;gBAAA1D,QAAA,EAAC;cAAQ;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACjCxB,OAAA,CAACN,IAAI,CAACgF,OAAO;gBAACC,IAAI,EAAC,UAAU;gBAACxD,KAAK,EAAEsB,QAAS;gBAACmC,QAAQ,EAAEC,CAAC,IAAInC,WAAW,CAACmC,CAAC,CAACC,MAAM,CAAC3D,KAAK,CAAE;gBAAC4D,QAAQ;cAAA;gBAAA1D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5F,CAAC,eACbxB,OAAA,CAACL,MAAM;cAACqF,OAAO,EAAC,SAAS;cAACL,IAAI,EAAC,QAAQ;cAAC7D,SAAS,EAAC,MAAM;cAAAC,QAAA,EACrDe,WAAW,GAAG,OAAO,GAAG;YAAU;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACPxB,OAAA;YAAKc,SAAS,EAAC,SAAS;YAAAC,QAAA,eACtBf,OAAA;cAAAe,QAAA,EAAOe,WAAW,GAAG,eAAe,GAAG;YAAkB;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC,eACNxB,OAAA;YAAKc,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnCf,OAAA,CAACL,MAAM;cAACqF,OAAO,EAAC,cAAc;cAAClE,SAAS,EAAC,eAAe;cAACE,OAAO,EAAEgD,YAAa;cAAAjD,QAAA,gBAC7Ef,OAAA;gBAAKiF,GAAG,EAAC,0DAA0D;gBAACC,GAAG,EAAC;cAAa;gBAAA7D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EACvFM,WAAW,GAAG,mBAAmB,GAAG,sBAAsB;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrD,CAAC,eACTxB,OAAA,CAACH,QAAQ;cACPsF,QAAQ,EAAC,gBAAgB;cACzBC,WAAW,EAAE,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,WAAY;cAClDtB,SAAS,EAAEuB,IAAI,IAAI3B,iBAAiB,CAAC,UAAU,EAAE2B,IAAI,CAAE;cACvDrB,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;cAClBsB,KAAK,EAAC,sBAAsB;cAAA1E,QAAA,EAE3BA,CAAC;gBAAE2E,aAAa;gBAAEC;cAAS,CAAC,kBAC3B3F,OAAA,CAACL,MAAM;gBACLqF,OAAO,EAAC,cAAc;gBACtBlE,SAAS,EAAC,iBAAiB;gBAC3BE,OAAO,EAAEA,CAAA,KAAM;kBAAE,IAAI,OAAO0E,aAAa,KAAK,UAAU,EAAEA,aAAa,CAAC,CAAC;gBAAE,CAAE;gBAC7EC,QAAQ,EAAEA,QAAS;gBAAA5E,QAAA,gBAEnBf,OAAA;kBAAKiF,GAAG,EAAC,uDAAuD;kBAACC,GAAG,EAAC;gBAAe;kBAAA7D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,EACtFM,WAAW,GAAG,qBAAqB,GAAG,wBAAwB;cAAA;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzD;YACT;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,eACNxB,OAAA;YAAKc,SAAS,EAAC,iCAAiC;YAAAC,QAAA,EAC7Ce,WAAW,gBACV9B,OAAA,CAAAE,SAAA;cAAAa,QAAA,GAAE,wBACsB,EAAC,GAAG,eAC1Bf,OAAA;gBAAMgB,OAAO,EAAEwC,UAAW;gBAACoC,KAAK,EAAE;kBAAEC,MAAM,EAAE,SAAS;kBAAEC,KAAK,EAAE,SAAS;kBAAEC,cAAc,EAAE;gBAAY,CAAE;gBAAAhF,QAAA,EAAC;cAExG;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA,eACP,CAAC,gBAEHxB,OAAA,CAAAE,SAAA;cAAAa,QAAA,GAAE,0BACwB,EAAC,GAAG,eAC5Bf,OAAA;gBAAMgB,OAAO,EAAEwC,UAAW;gBAACoC,KAAK,EAAE;kBAAEC,MAAM,EAAE,SAAS;kBAAEC,KAAK,EAAE,SAAS;kBAAEC,cAAc,EAAE;gBAAY,CAAE;gBAAAhF,QAAA,EAAC;cAExG;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA,eACP;UACH;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENxB,OAAA,CAACF,iBAAiB;MAChBsC,IAAI,EAAEF,SAAS,CAACE,IAAK;MACrB4D,WAAW,EAAE5B,UAAW;MACxB6B,UAAU,EAAE/D,SAAS,CAACG,MAAO;MAC7B6D,QAAQ,EAAEhE,SAAS,CAACI;IAAK;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACK,GAAA,CArLQF,QAAQ;EAAA,QAwEM/B,cAAc;AAAA;AAAAuG,GAAA,GAxE5BxE,QAAQ;AAuLjB,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAyE,GAAA;AAAAC,YAAA,CAAA1E,EAAA;AAAA0E,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}